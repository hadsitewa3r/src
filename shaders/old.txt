//vert
#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexture;
layout (location = 2) in vec3 aNormal;


out vec2 TexCod;
out vec3 Normal;
out vec3 crntPos;

uniform mat4 camMatrix;
uniform mat4 model;

void main(){
   crntPos = vec3(model * vec4(aPos, 1.0f));
   gl_Position = camMatrix * vec4(aPos, 1.0);
   TexCod = aTexture;
   Normal = aNormal;
}

//Frag
#version 330 core
out vec4 FragColor;

in vec2 TexCod;
in vec3 Normal;
in vec3 crntPos;

uniform sampler2D tex0;
uniform vec4 lightColor;
uniform vec4 lightPos;

void main(){
   vec3 normal = normalize(Normal);
   vec3 lightDir = normalize(lightPos - crntPos);
   float diffuse = max(dot(normal, lightDir), 0.0f);
   FragColor = texture(tex0, TexCod) * lightColor * diffuse;
}
